---
name: service
author: "@mas2020"
shortDesc: Info about the services
description: |
  This module is useful to get information on processes, disk status, memory occupation...
version: 0.5.0
commands:
  - name: info
    usage: info
    shortDesc: Info about single service
    description: |
      Start, stop and get information about services
    category: system
    options:
      - name: name
        shortname: n
        desc: status info of a service (e.g. goal system service -i sshd --on yourserver)
    systems: 
      - type: "*"
        cmd: "systemctl status $name.service --no-pager"
        filters:
          - pattern: .*running.*
            message: service is RUNNING
            color: GREEN
          - pattern: 'could not be found'
            message: service not FOUND
            color: RED
  - name: list
    usage: list
    shortDesc: List OS services
    description: |
      List the services with status == active. To get all services pass --all, to filter for a specific
      status pass --status <STATUS>. To apply a custom filter on the list use --search <REG-EXP>
    category: system
    options:
      - name: search
        shortname: s
        {{/* search options variable */}}
        {{ $search := index . "--search" }}
        {{ $s := index . "-s" }}
        desc: |
          to filter a list using a regexp with linux grep command, some examples are:
          service list --on <host> -s '-i httpd'
          service list --on <host> -s '-v httpd'
          service list --on <host> -s 'httpd.*$'
      - name: all
        shortname: a
        desc: "to get all the units, active and not"
        substitution: --all
      - name: status
        {{ $status := index . "--status" }}
        desc: "to get the units in a particular status e.g. loaded, active, inactive. Use --status <STATUS>"
    systems:
      - type: "*"
        {{ if or $search  $s }}
          {{ if $status }}
        cmd: "systemctl list-units $all --state=$status --no-pager | grep $search"
          {{else}}
        cmd: "systemctl list-units $all --no-pager | grep $search"
          {{end}}
        {{else}}
          {{ if $status }}
        cmd: "systemctl list-units $all --state=$status --no-pager"
          {{else}}
        cmd: "systemctl list-units $all --no-pager"
          {{end}}
        {{end}}
  - name: test
    usage: test
    shortDesc: test
    description: |
      test
    category: system
    options:
      - name: status
        shortname: i
        desc: status info of a service
    systems:
      - type: "*"
        cmd: "$status"